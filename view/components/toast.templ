package components 

type ToastProps struct {
	ID		string
	Text	string
	Visible bool
}

templ Toast(p ToastProps) {
	@ToastContainer(p)
<script> 
	document.body.addEventListener('htmx:responseError', function(evt) {
	if (evt.detail.xhr.status === 404) {
		htmx.ajax("GET", "htmx/dashboard/toast/404", {target: "#toast-container", swap: "outerHTML"}).catch((e)=>console.log(e))
	}
		})
</script>
}

templ ToastContainer(p ToastProps) {
	<div id="toast-container" 
	if p.Visible == false {
	class="fixed top-0 left-1/2 transform -translate-x-1/2 mt-4 w-11/12 max-w-md p-4 bg-green-500 text-white rounded-lg shadow-lg translate-y-[-100%] transition-all duration-500 ease-in-out z-50a opacity-0 text-center select-none" 
	} else {
	 class="fixed top-0 left-1/2 transform -translate-x-1/2 mt-4 w-11/12 max-w-md p-4 bg-green-500 text-white rounded-lg shadow-lg translate-y-[0%] transition-all duration-500 ease-in-out z-50 opacity-100 text-center select-none"
	} 
	 >
  <p>{ p.Text }</p>
	@ToastDisappear()
</div>
}

templ ToastContainerError(p ToastProps) {
	<div id="toast-container" 
	if p.Visible == false {
	class="fixed top-0 left-1/2 transform -translate-x-1/2 mt-4 w-11/12 max-w-md p-4 bg-red-500 text-white rounded-lg shadow-lg translate-y-[-100%] transition-all duration-500 ease-in-out z-50a opacity-0 text-center select-none" 
	} else {
	 class="fixed top-0 left-1/2 transform -translate-x-1/2 mt-4 w-11/12 max-w-md p-4 bg-red-500 text-white rounded-lg shadow-lg translate-y-[0%] transition-all duration-500 ease-in-out z-50 opacity-100 text-center select-none"
	} 
	 >
  <p>{ p.Text }</p>
	@ToastDisappear()
</div>
}

script ToastDisappear() {
	setTimeout(()=> {
		const toast = document.getElementById("toast-container");
		toast.classList.remove('opacity-100', 'translate-y-0');
		toast.classList.add('opacity-0', 'translate-y-[-100%]');
		toastTimeout = null;
		}, 3000);
}
